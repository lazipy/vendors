{"version":3,"sources":["client/containers/Project/Project.js"],"names":["plugin","require","Project","visitorId","state","user","uid","curProject","project","currProject","currGroup","group","getProject","fetchGroupMsg","setBreadcrumb","props","componentWillMount","match","params","id","group_id","name","group_name","href","_id","componentWillReceiveProps","nextProps","currProjectId","nextProjectId","render","location","routers","interface","path","component","Interface","activity","Activity","data","ProjectData","members","ProjectMember","setting","Setting","emitHook","key","defaultName","pathname","subnavData","forEach","item","value","replace","push","type","filter","length","map","Component","propTypes","PropTypes","number","object","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,SAASC,0BAAf;IAgBqBC,O,WAfpB,yBACC,iBAAS;AACP,SAAO;AACLC,eAAWC,MAAMC,IAAN,CAAWF,SADjB;AAELG,SAAKF,MAAMC,IAAN,CAAWC,GAFX;AAGLC,gBAAYH,MAAMI,OAAN,CAAcC,WAHrB;AAILC,eAAWN,MAAMO,KAAN,CAAYD;AAJlB,GAAP;AAMD,CARF,EASC;AACEE,iCADF;AAEEC,qCAFF;AAGEC;AAHF,CATD,C;;;AA4BC,mBAAYC,KAAZ,EAAmB;AAAA;AAAA,0DACjB,sBAAMA,KAAN,CADiB;AAElB;;oBAEKC,kB;;;;;;;qBACE,KAAKD,KAAL,CAAWH,UAAX,CAAsB,KAAKG,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,C;;;;qBACA,KAAKJ,KAAL,CAAWF,aAAX,CAAyB,KAAKE,KAAL,CAAWR,UAAX,CAAsBa,QAA/C,C;;;;AAEN,mBAAKL,KAAL,CAAWD,aAAX,CAAyB,CACvB;AACEO,sBAAM,KAAKN,KAAL,CAAWL,SAAX,CAAqBY,UAD7B;AAEEC,sBAAM,YAAY,KAAKR,KAAL,CAAWL,SAAX,CAAqBc;AAFzC,eADuB,EAKvB;AACEH,sBAAM,KAAKN,KAAL,CAAWR,UAAX,CAAsBc;AAD9B,eALuB,CAAzB;;;;;;;;;;;;;;;;;oBAWII,yB;2GAA0BC,S;;;;;;AACxBC,2B,GAAgB,KAAKZ,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,E;AACxCS,2B,GAAgBF,UAAUT,KAAV,CAAgBC,MAAhB,CAAuBC,E;;oBACzCQ,kBAAkBC,a;;;;;;qBACd,KAAKb,KAAL,CAAWH,UAAX,CAAsBgB,aAAtB,C;;;;qBACA,KAAKb,KAAL,CAAWF,aAAX,CAAyB,KAAKE,KAAL,CAAWR,UAAX,CAAsBa,QAA/C,C;;;AACN,mBAAKL,KAAL,CAAWD,aAAX,CAAyB,CACvB;AACEO,sBAAM,KAAKN,KAAL,CAAWL,SAAX,CAAqBY,UAD7B;AAEEC,sBAAM,YAAY,KAAKR,KAAL,CAAWL,SAAX,CAAqBc;AAFzC,eADuB,EAKvB;AACEH,sBAAM,KAAKN,KAAL,CAAWR,UAAX,CAAsBc;AAD9B,eALuB,CAAzB;;;;;;;;;;;;;;;;;oBAYJQ,M,qBAAS;AAAA;;AAAA,iBACqB,KAAKd,KAD1B;AAAA,QACCE,KADD,UACCA,KADD;AAAA,QACQa,QADR,UACQA,QADR;;AAEP,QAAIC,UAAU,KAAKhB,KAAL,CAAWT,GAAX,KAAmB,KAAKS,KAAL,CAAWZ,SAA9B,GAA2C;AACvD6B,iBAAW,EAAEX,MAAM,IAAR,EAAcY,MAAM,gCAApB,EAAsDC,WAAWC,mBAAjE,EAD4C;AAEvDC,gBAAU,EAAEf,MAAM,IAAR,EAAcY,MAAM,uBAApB,EAA6CC,WAAWG,kBAAxD,EAF6C;AAGvDC,YAAM,EAAEjB,MAAM,MAAR,EAAgBY,MAAM,mBAAtB,EAA2CC,WAAWK,qBAAtD,EAHiD;AAIvDC,eAAS,EAAEnB,MAAM,MAAR,EAAgBY,MAAM,sBAAtB,EAA8CC,WAAWO,uBAAzD,EAJ8C;AAKvDC,eAAS,EAAErB,MAAM,IAAR,EAAcY,MAAM,sBAApB,EAA4CC,WAAWS,iBAAvD;AAL8C,KAA3C,GAMR;AACJX,iBAAW,EAAEX,MAAM,IAAR,EAAcY,MAAM,gCAApB,EAAsDC,WAAWC,mBAAjE;AADP,KANN;;AAUAnC,WAAO4C,QAAP,CAAgB,SAAhB,EAA2Bb,OAA3B;;AAEA,QAAIc,YAAJ;AAAA,QAASC,oBAAT;AACA,SAAKD,GAAL,IAAYd,OAAZ,EAAqB;AACnB,UACE,+BAAUD,SAASiB,QAAnB,EAA6B;AAC3Bd,cAAMF,QAAQc,GAAR,EAAaZ;AADQ,OAA7B,MAEO,IAHT,EAIE;AACAa,sBAAcf,QAAQc,GAAR,EAAaxB,IAA3B;AACA;AACD;AACF;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAI2B,aAAa,EAAjB;AACA,wBAAYjB,OAAZ,EAAqBkB,OAArB,CAA6B,eAAO;AAClC,UAAIC,OAAOnB,QAAQc,GAAR,CAAX;AACA,UAAIM,QAAQ,EAAZ;AACA,UAAIN,QAAQ,WAAZ,EAAyB;AACvBM,gBAAQ;AACN9B,gBAAM6B,KAAK7B,IADL;AAENY,8BAAkBhB,MAAMC,MAAN,CAAaC,EAA/B;AAFM,SAAR;AAID,OALD,MAKO;AACLgC,gBAAQ;AACN9B,gBAAM6B,KAAK7B,IADL;AAENY,gBAAMiB,KAAKjB,IAAL,CAAUmB,OAAV,CAAkB,QAAlB,EAA4BnC,MAAMC,MAAN,CAAaC,EAAzC;AAFA,SAAR;AAID;AACD6B,iBAAWK,IAAX,CAAgBF,KAAhB;AACD,KAfD;;AAiBA,QAAI,KAAKpC,KAAL,CAAWL,SAAX,CAAqB4C,IAArB,KAA8B,SAAlC,EAA6C;AAC3CN,mBAAaA,WAAWO,MAAX,CAAkB,gBAAQ;AACrC,eAAOL,KAAK7B,IAAL,IAAa,MAApB;AACD,OAFY,CAAb;AAGD;;AAED,QAAI,oBAAY,KAAKN,KAAL,CAAWR,UAAvB,EAAmCiD,MAAnC,KAA8C,CAAlD,EAAqD;AACnD,aAAO,8BAAC,iBAAD,IAAS,aAAT,GAAP;AACD;;AAED,WACE;AAAA;AAAA;AACE,oCAAC,aAAD,IAAQ,WAASV,WAAjB,EAA8B,MAAME,UAApC,GADF;AAEE;AAAC,8BAAD;AAAA;AACE,sCAAC,wBAAD,IAAU,WAAV,EAAgB,MAAK,cAArB,EAAoC,kBAAgB/B,MAAMC,MAAN,CAAaC,EAA7B,mBAApC,GADF;AAWG,4BAAYY,OAAZ,EAAqB0B,GAArB,CAAyB,eAAO;AAC/B,cAAIP,OAAOnB,QAAQc,GAAR,CAAX;;AAEA,iBAAOA,QAAQ,SAAR,GACL,OAAK9B,KAAL,CAAWL,SAAX,CAAqB4C,IAArB,KAA8B,SAA9B,GACE,8BAAC,qBAAD,IAAO,MAAMJ,KAAKjB,IAAlB,EAAwB,WAAWiB,KAAKhB,SAAxC,EAAmD,KAAKW,GAAxD,GADF,GAEI,IAHC,GAKL,8BAAC,qBAAD,IAAO,MAAMK,KAAKjB,IAAlB,EAAwB,WAAWiB,KAAKhB,SAAxC,EAAmD,KAAKW,GAAxD,GALF;AAOD,SAVA;AAXH;AAFF,KADF;AA4BD,G;;;EArJkCa,oB,WAC5BC,S,GAAY;AACjBxD,aAAWyD,oBAAUC,MADJ;AAEjBvD,OAAKsD,oBAAUC,MAFE;AAGjB5C,SAAO2C,oBAAUE,MAHA;AAIjBvD,cAAYqD,oBAAUE,MAJL;AAKjBlD,cAAYgD,oBAAUG,IALL;AAMjBjC,YAAU8B,oBAAUE,MANH;AAOjBjD,iBAAe+C,oBAAUG,IAPR;AAQjBjD,iBAAe8C,oBAAUG,IARR;AASjBrD,aAAWkD,oBAAUE;AATJ,C;kBADA5D,O","file":"Project.js","sourceRoot":"/Users/lee/Project/analysys/yapi/vendors","sourcesContent":["import React, { PureComponent as Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect, matchPath } from 'react-router-dom';\nimport { Subnav } from '../../components/index';\nimport { fetchGroupMsg } from '../../reducer/modules/group';\nimport { setBreadcrumb } from '../../reducer/modules/user';\nimport { getProject } from '../../reducer/modules/project';\nimport Interface from './Interface/Interface.js';\nimport Activity from './Activity/Activity.js';\nimport Setting from './Setting/Setting.js';\nimport Loading from '../../components/Loading/Loading';\nimport ProjectMember from './Setting/ProjectMember/ProjectMember.js';\nimport ProjectData from './Setting/ProjectData/ProjectData.js';\nconst plugin = require('client/plugin.js');\n@connect(\n  state => {\n    return {\n      visitorId: state.user.visitorId,\n      uid: state.user.uid,\n      curProject: state.project.currProject,\n      currGroup: state.group.currGroup\n    };\n  },\n  {\n    getProject,\n    fetchGroupMsg,\n    setBreadcrumb\n  }\n)\nexport default class Project extends Component {\n  static propTypes = {\n    visitorId: PropTypes.number,\n    uid: PropTypes.number,\n    match: PropTypes.object,\n    curProject: PropTypes.object,\n    getProject: PropTypes.func,\n    location: PropTypes.object,\n    fetchGroupMsg: PropTypes.func,\n    setBreadcrumb: PropTypes.func,\n    currGroup: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  async componentWillMount() {\n    await this.props.getProject(this.props.match.params.id);\n    await this.props.fetchGroupMsg(this.props.curProject.group_id);\n\n    this.props.setBreadcrumb([\n      {\n        name: this.props.currGroup.group_name,\n        href: '/group/' + this.props.currGroup._id\n      },\n      {\n        name: this.props.curProject.name\n      }\n    ]);\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    const currProjectId = this.props.match.params.id;\n    const nextProjectId = nextProps.match.params.id;\n    if (currProjectId !== nextProjectId) {\n      await this.props.getProject(nextProjectId);\n      await this.props.fetchGroupMsg(this.props.curProject.group_id);\n      this.props.setBreadcrumb([\n        {\n          name: this.props.currGroup.group_name,\n          href: '/group/' + this.props.currGroup._id\n        },\n        {\n          name: this.props.curProject.name\n        }\n      ]);\n    }\n  }\n\n  render() {\n    const { match, location } = this.props;\n    let routers = this.props.uid !== this.props.visitorId ? ({\n      interface: { name: '接口', path: '/project/:id/interface/:action', component: Interface },\n      activity: { name: '动态', path: '/project/:id/activity', component: Activity },\n      data: { name: '数据管理', path: '/project/:id/data', component: ProjectData },\n      members: { name: '成员管理', path: '/project/:id/members', component: ProjectMember },\n      setting: { name: '设置', path: '/project/:id/setting', component: Setting }\n    }) : ({\n      interface: { name: '接口', path: '/project/:id/interface/:action', component: Interface }\n    });\n\n    plugin.emitHook('sub_nav', routers);\n\n    let key, defaultName;\n    for (key in routers) {\n      if (\n        matchPath(location.pathname, {\n          path: routers[key].path\n        }) !== null\n      ) {\n        defaultName = routers[key].name;\n        break;\n      }\n    }\n\n    // let subnavData = [{\n    //   name: routers.interface.name,\n    //   path: `/project/${match.params.id}/interface/api`\n    // }, {\n    //   name: routers.activity.name,\n    //   path: `/project/${match.params.id}/activity`\n    // }, {\n    //   name: routers.data.name,\n    //   path: `/project/${match.params.id}/data`\n    // }, {\n    //   name: routers.members.name,\n    //   path: `/project/${match.params.id}/members`\n    // }, {\n    //   name: routers.setting.name,\n    //   path: `/project/${match.params.id}/setting`\n    // }];\n\n    let subnavData = [];\n    Object.keys(routers).forEach(key => {\n      let item = routers[key];\n      let value = {};\n      if (key === 'interface') {\n        value = {\n          name: item.name,\n          path: `/project/${match.params.id}/interface/api`\n        };\n      } else {\n        value = {\n          name: item.name,\n          path: item.path.replace(/\\:id/gi, match.params.id)\n        };\n      }\n      subnavData.push(value);\n    });\n\n    if (this.props.currGroup.type === 'private') {\n      subnavData = subnavData.filter(item => {\n        return item.name != '成员管理';\n      });\n    }\n\n    if (Object.keys(this.props.curProject).length === 0) {\n      return <Loading visible />;\n    }\n\n    return (\n      <div>\n        <Subnav default={defaultName} data={subnavData} />\n        <Switch>\n          <Redirect exact from=\"/project/:id\" to={`/project/${match.params.id}/interface/api`} />\n          {/* <Route path={routers.activity.path} component={Activity} />\n          \n          <Route path={routers.setting.path} component={Setting} />\n          {this.props.currGroup.type !== 'private' ?\n            <Route path={routers.members.path} component={routers.members.component}/>\n            : null\n          }\n\n          <Route path={routers.data.path} component={ProjectData} /> */}\n          {Object.keys(routers).map(key => {\n            let item = routers[key];\n\n            return key === 'members' ? (\n              this.props.currGroup.type !== 'private' ? (\n                <Route path={item.path} component={item.component} key={key} />\n              ) : null\n            ) : (\n              <Route path={item.path} component={item.component} key={key} />\n            );\n          })}\n        </Switch>\n      </div>\n    );\n  }\n}\n"]}