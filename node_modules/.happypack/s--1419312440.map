{"version":3,"sources":["client/components/AuthenticatedComponent.js"],"names":["requireAuthentication","Component","isAuthenticated","state","user","isLogin","changeMenuItem","loginActions","props","componentWillMount","checkAuth","componentWillReceiveProps","console","log","location","pathname","includes","email","password","history","push","render","React","PureComponent","propTypes","PropTypes","bool","object","dispatch","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;QAMgBA,qB,GAAAA,qB;;AANhB;;;;AACA;;AACA;;;;AACA;;AACA;;;;AAEO,SAASA,qBAAT,CAA+BC,SAA/B,EAA0C;AAAA;;AAC/C,gBAAQ,yBACN,iBAAS;AACP,WAAO;AACLC,uBAAiBC,MAAMC,IAAN,CAAWC;AADvB,KAAP;AAGD,GALK,EAMN;AACEC,wCADF;AAEEC;AAFF,GANM,CAAR;AAAA;;AAYE,oCAAYC,KAAZ,EAAmB;AAAA;AAAA,4DACjB,gCAAMA,KAAN,CADiB;AAElB;;AAdH,qCAuBEC,kBAvBF,iCAuBuB;AACnB,WAAKC,SAAL;AACD,KAzBH;;AAAA,qCA0BEC,yBA1BF,wCA0B8B;AAC1B,WAAKD,SAAL;AACD,KA5BH;;AAAA,qCA6BQA,SA7BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA8BS,KAAKF,KAAL,CAAWN,eA9BpB;AAAA;AAAA;AAAA;;AA+BMU,wBAAQC,GAAR,CAAY,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,QAApB,CAA6BC,QAA7B,CAAsC,SAAtC,CAAZ;;AA/BN,qBAgCU,KAAKR,KAAL,CAAWM,QAAX,CAAoBC,QAApB,CAA6BC,QAA7B,CAAsC,SAAtC,CAhCV;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAiCc,KAAKR,KAAL,CAAWD,YAAX,CAAwB,EAAEU,OAAO,kBAAT,EAA6BC,UAAU,QAAvC,EAAxB,CAjCd;;AAAA;AAAA;AAAA;;AAAA;AAmCQ,qBAAKV,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,qBAAKZ,KAAL,CAAWF,cAAX,CAA0B,GAA1B;;AApCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,qCAwCEe,MAxCF,qBAwCW;AACP,aAAO;AAAA;AAAA;AAAM,aAAKb,KAAL,CAAWN,eAAX,GAA6B,8BAAC,SAAD,EAAe,KAAKM,KAApB,CAA7B,GAA6D;AAAnE,OAAP;AACD,KA1CH;;AAAA;AAAA,IAWqCc,gBAAMC,aAX3C,WAeSC,SAfT,GAeqB;AACjBtB,qBAAiBuB,oBAAUC,IADV;AAEjBZ,cAAUW,oBAAUE,MAFH;AAGjBC,cAAUH,oBAAUI,IAHH;AAIjBV,aAASM,oBAAUE,MAJF;AAKjBrB,oBAAgBmB,oBAAUI,IALT;AAMjBtB,kBAAckB,oBAAUI;AANP,GAfrB;AA4CD","file":"AuthenticatedComponent.js","sourceRoot":"/Users/lee/Project/analysys/yapi/vendors","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeMenuItem } from '../reducer/modules/menu';\nimport { loginActions } from '../reducer/modules/user';\n\nexport function requireAuthentication(Component) {\n  return @connect(\n    state => {\n      return {\n        isAuthenticated: state.user.isLogin\n      };\n    },\n    {\n      changeMenuItem,\n      loginActions\n    }\n  )\n  class AuthenticatedComponent extends React.PureComponent {\n    constructor(props) {\n      super(props);\n    }\n    static propTypes = {\n      isAuthenticated: PropTypes.bool,\n      location: PropTypes.object,\n      dispatch: PropTypes.func,\n      history: PropTypes.object,\n      changeMenuItem: PropTypes.func,\n      loginActions: PropTypes.func\n    };\n    componentWillMount() {\n      this.checkAuth();\n    }\n    componentWillReceiveProps() {\n      this.checkAuth();\n    }\n    async checkAuth() {\n      if (!this.props.isAuthenticated) {\n        console.log(this.props.location.pathname.includes('project'))\n        if (this.props.location.pathname.includes('project')) {\n          await this.props.loginActions({ email: '877286986@qq.com', password: '123456' })\n        } else {\n          this.props.history.push('/');\n          this.props.changeMenuItem('/');\n        }\n      } \n    }\n    render() {\n      return <div>{this.props.isAuthenticated ? <Component {...this.props} /> : null}</div>;\n    }\n  };\n}\n"]}