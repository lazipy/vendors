
<script>
import React from "./ReactQuick.js";

function Global(...args) {
    this.globalData = {
        ufo: 'ufo',
        buildType: "quick",
        __quickQuery: {}
    };
}

Global = React.toClass(Global, React.Component, {
    onCollectLogs: function(dataset, type, node) {
        var page = React.getCurrentPage();

        if (!page) {
            return;
        }

        var path = page.props.path;
        var uuid = dataset.beaconUid;

        if (node) {
            var xpath = [];

            while (node.parentNode) {
                var index = node.parentNode.children.indexOf(node);
                xpath.unshift(index);
                node = node.parentNode;
            }

            uuid = xpath.join('/');
        }

        console.log('收集日志', path, type, uuid);
    },
    onGlobalShow: function() {
        console.log(React.getCurrentPage().props.path, 'onGlobalShow');
    },
    onGlobalLoad: function() {
        React.api.initStorageSync(this.globalData.__storage);
    },
    onShowMenu: function(pageInstance, app) {
        var api = React.api;
        api.showActionSheet({
            itemList: ['转发', '添加到桌面', '关于', '取消'],
            success: function(ret) {
                switch (ret.index) {
                    case 0:
                        var fn = pageInstance.onShareAppMessage || app.onGlobalShare;
                        var obj = fn && fn();

                        if (obj) {
                            console.log(obj);
                            obj.type = obj.type || 'path';
                            obj.data = obj.data || obj.path;

                            obj.success = obj.success || function(a) {
                                console.log(a, '分享成功');
                            };

                            obj.fail = obj.fail || function(a) {
                                console.log(a, '分享失败');
                            };

                            api.share(obj);
                        }

                        break;

                    case 1:
                        api.createShortcut();
                        break;

                    case 2:
                        api.getSystemInfo({
                            success: function(appInfo) {
                                api.redirectTo({
                                    url: "pages/platform/about/index?brand=" + appInfo.brand + "&version=" + appInfo.version
                                });
                            }
                        });
                        break;

                    case 3:
                        break;
                }
            }
        });
    },
    onCreate: function() {
        var ref = Object.getPrototypeOf(global) || global;

        var _this = this;

        this.globalData = this.$def.globalData;

        ref.getApp = function() {
            return _this;
        };

        console.log('App launched');
    },
    classUid: "c8819"
}, {});
Global.config = {
    window: {
        backgroundTextStyle: 'light',
        navigationBarTitleText: 'mpreact',
        navigationBarTextStyle: 'white'
    },
    tabBar: {
        color: '#929292',
        selectedColor: '#00bcd4',
        borderStyle: 'black',
        backgroundColor: '#ffffff',
        list: [{
            pagePath: 'pages/platform/index/index',
            iconPath: '/assets/image/homepage_normal.png',
            selectedIconPath: '/assets/image/homepage_select.png',
            text: '首页'
        }, {
            pagePath: 'pages/platform/question/index/index',
            iconPath: '/assets/image/question_normal.png',
            selectedIconPath: '/assets/image/question_select.png',
            text: '问答社区'
        }, {
            pagePath: 'pages/platform/userCenter/index',
            iconPath: '/assets/image/uc_normal.png',
            selectedIconPath: '/assets/image/uc_select.png',
            text: '我的'
        }]
    }
};
export default React.registerApp(new Global());
</script>
<style>
.c-flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.c-flex__item {
  flex: 1;
}

.page-guide-text {
  color: #333;
  text-align: center;
  padding: 20px;
}

.page_hd {
  text-align: center;
  padding: 20px;
  font-weight: bold;
}

.btn {
  background-color: #0088a4;
  color: #fff;
  margin-bottom: 20px;
}
</style>