<import name="anu-page-wrapper" src="../../../components/PageWrapper/index.ux"></import>
<template>
    <anu-page-wrapper>
        <div>
            <div class="section">
                <div class="section__title"><text>vertical scroll</text></div>
                <list style="height: 400px" onscrolltop="dispatchEvent" onscrollbottom="dispatchEvent" onscroll="dispatchEvent" scroll-into-div="{{state.todiv}}" scroll-top="{{state.scrollTop}}" data-scrolltop-uid="e55_24" data-beacon-uid="default" data-scrollbottom-uid="e56_24" data-scroll-uid="e57_24">
                    <list-item type="green" id="green" class="scroll-view-item bc_green"></list-item>
                    <list-item type="red" class="scroll-view-item bc_red"></list-item>
                    <list-item type="yellow" class="scroll-view-item bc_yellow"></list-item>
                    <list-item type="blue" class="scroll-view-item bc_blue"></list-item>
                </list>
                <div class="btn-area">
                    <div size="mini" onclick="dispatchEvent" data-click-uid="e68_44" data-beacon-uid="default"><text>click me to scroll into div</text><text>{{' '}}</text></div>
                    <div size="mini" onclick="dispatchEvent" data-click-uid="e71_44" data-beacon-uid="default"><text>click me to scroll</text></div>
                </div>
            </div>
            <div class="section section_gap">
                <div class="section__title"><text>horizontal scroll</text></div>
                <list class="scroll-view_H" style="width: 100%">
                    <list-item type="green" id="green" class="scroll-view-item_H bc_green"></list-item>
                    <list-item type="red" id="red" class="scroll-view-item_H bc_red"></list-item>
                    <list-item type="yellow" id="yellow" class="scroll-view-item_H bc_yellow"></list-item>
                    <list-item type="blue" id="blue" class="scroll-view-item_H bc_blue"></list-item>
                </list>
            </div>
        </div>
    </anu-page-wrapper>
</template>
<script>
import React from "../../../ReactQuick.js";

function P() {
    this.order = ['red', 'yellow', 'blue', 'green', 'red'];
    this.state = {
        toView: 'red',
        scrollTop: 100
    };
}

P = React.toClass(P, React.Component, {
    upper: function(e) {
        console.log(e);
    },
    lower: function(e) {
        console.log(e);
    },
    scroll: function(e) {
        console.log(e);
    },
    tap: function() {
        for (var i = 0; i < this.order.length; ++i) {
            if (this.order[i] === this.state.toView) {
                this.setState({
                    toView: this.order[i + 1]
                });
                break;
            }
        }
    },
    tapMove: function() {
        var _self = this;

        this.setState({
            scrollTop: _self.state.scrollTop + 10
        });
    },
    render: function() {
        var h = React.createElement;
        return h("div", null, h("div", {
            class: "section"
        }, h("div", {
            class: "section__title"
        }, "vertical scroll"), h("list", {
            style: "height: 400px",
            onScrollTop: this.upper,
            onScrollBottom: this.lower,
            onScroll: this.scroll,
            "scroll-into-div": this.state.todiv,
            "scroll-top": this.state.scrollTop,
            "data-scrolltop-uid": "e55_24",
            "data-beacon-uid": "default",
            "data-scrollbottom-uid": "e56_24",
            "data-scroll-uid": "e57_24"
        }, h("list-item", {
            type: "green",
            id: "green",
            class: "scroll-view-item bc_green"
        }), h("list-item", {
            type: "red",
            class: "scroll-view-item bc_red"
        }), h("list-item", {
            type: "yellow",
            class: "scroll-view-item bc_yellow"
        }), h("list-item", {
            type: "blue",
            class: "scroll-view-item bc_blue"
        })), h("div", {
            class: "btn-area"
        }, h("div", {
            size: "mini",
            onClick: this.tap,
            "data-click-uid": "e68_44",
            "data-beacon-uid": "default"
        }, "click me to scroll into div", ' '), h("div", {
            size: "mini",
            onClick: this.tapMove,
            "data-click-uid": "e71_44",
            "data-beacon-uid": "default"
        }, "click me to scroll"))), h("div", {
            class: "section section_gap"
        }, h("div", {
            class: "section__title"
        }, "horizontal scroll"), h("list", {
            class: "scroll-view_H",
            style: "width: 100%"
        }, h("list-item", {
            type: "green",
            id: "green",
            class: "scroll-view-item_H bc_green"
        }), h("list-item", {
            type: "red",
            id: "red",
            class: "scroll-view-item_H bc_red"
        }), h("list-item", {
            type: "yellow",
            id: "yellow",
            class: "scroll-view-item_H bc_yellow"
        }), h("list-item", {
            type: "blue",
            id: "blue",
            class: "scroll-view-item_H bc_blue"
        }))));;
    },
    classUid: "c3116"
}, {});
P = React.registerPage(P, "pages/native/scrollView/index");
export default P;
</script>
<style>
.scroll-view-item {
  height: 400px;
}

.bc_green {
  background-color: green;
}

.bc_red {
  background-color: red;
}

.bc_yellow {
  background-color: yellow;
}

.bc_blue {
  background-color: blue;
}
</style>