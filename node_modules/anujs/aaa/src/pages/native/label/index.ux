<import name="anu-xcheckboxgroup" src="../../../npm/schnee-ui/components/XCheckboxGroup/index.ux"></import>
<import name="anu-xlabel" src="../../../npm/schnee-ui/components/XLabel/index.ux"></import>
<import name="anu-xcheckbox" src="../../../npm/schnee-ui/components/XCheckbox/index.ux"></import>
<import name="anu-xradiogroup" src="../../../npm/schnee-ui/components/XRadioGroup/index.ux"></import>
<import name="anu-xradio" src="../../../npm/schnee-ui/components/XRadio/index.ux"></import>
<import name="anu-page-wrapper" src="../../../components/PageWrapper/index.ux"></import>
<template>
    <anu-page-wrapper>
        <div class="column-layout">
            <div class="section section_gap column-layout">
                <div class="section__title"><text>表单组件在label内</text></div>
                <anu-xcheckboxgroup data-instance-uid="{{'i60_20_' + 0}}">
                    <block for="(index,item) in state.checkboxItems">
                        <div class="label-1">
                            <anu-xlabel data-instance-uid="{{'i67_36_' + index}}">
                                <anu-xcheckbox data-instance-uid="{{'i71_40_' + index}}"></anu-xcheckbox>
                            </anu-xlabel>
                        </div>
                    </block>
                </anu-xcheckboxgroup>
            </div>
            <div class="section section_gap column-layout">
                <div class="section__title"><text>label用for标识表单组件</text></div>
                <anu-xradiogroup data-instance-uid="{{'i86_20_' + 0}}">
                    <block for="(index,item) in state.radioItems">
                        <div class="label-2">
                            <anu-xradio data-instance-uid="{{'i95_36_' + index}}"></anu-xradio>
                        </div>
                    </block>
                </anu-xradiogroup>
            </div>
        </div>
    </anu-page-wrapper>
</template>
<script>
import React from "../../../ReactQuick.js";

function P() {
    this.state = {
        checkboxItems: [{
            name: 'USA',
            value: '美国'
        }, {
            name: 'CHN',
            value: '中国',
            checked: 'true'
        }, {
            name: 'BRA',
            value: '巴西'
        }, {
            name: 'JPN',
            value: '日本',
            checked: 'true'
        }, {
            name: 'ENG',
            value: '英国'
        }, {
            name: 'TUR',
            value: '法国'
        }],
        radioItems: [{
            name: 'USA',
            value: '美国'
        }, {
            name: 'CHN',
            value: '中国',
            checked: 'true'
        }, {
            name: 'BRA',
            value: '巴西'
        }, {
            name: 'JPN',
            value: '日本'
        }, {
            name: 'ENG',
            value: '英国'
        }, {
            name: 'TUR',
            value: '法国'
        }],
        hidden: false
    };
}

P = React.toClass(P, React.Component, {
    checkboxChange: function(e) {
        var checked = e.detail.value || e.target.value;
        var state = this.state;

        for (var i = 0; i < state.checkboxItems.length; i++) {
            if (checked.indexOf(state.checkboxItems[i].name) !== -1) {
                state.checkboxItems[i].checked = true;
            } else {
                state.checkboxItems[i].checked = false;
            }
        }

        this.setState(state);
    },
    radioChange: function(e) {
        var checked = e.detail.value || e.target.value;
        var state = this.state;

        for (var i = 0; i < state.radioItems.length; i++) {
            if (checked.indexOf(state.radioItems[i].name) !== -1) {
                state.radioItems[i].checked = true;
            } else {
                state.radioItems[i].checked = false;
            }
        }

        this.setState(state);
    },
    render: function() {
        var h = React.createElement;
        return h("div", {
            class: "column-layout"
        }, h("div", {
            className: "section section_gap column-layout"
        }, h("div", {
            className: "section__title"
        }, "表单组件在label内"), h(React.useComponent, {
            className: "group column-layout",
            onChange: this.checkboxChange,
            is: "XCheckboxGroup",
            "data-instance-uid": 'i60_20_' + 0
        }, this.state.checkboxItems.map(function(item, index) {
            return h("div", {
                className: "label-1",
                key: index
            }, h(React.useComponent, {
                is: "XLabel",
                "data-instance-uid": 'i67_36_' + index
            }, h(React.useComponent, {
                value: item.name,
                checked: item.checked,
                text: item.value,
                isRight: true,
                is: "XCheckbox",
                "data-instance-uid": 'i71_40_' + index
            })));
        }, this))), h("div", {
            className: "section section_gap column-layout"
        }, h("div", {
            className: "section__title"
        }, "label用for标识表单组件"), h(React.useComponent, {
            className: "group column-layout",
            onChange: this.radioChange,
            is: "XRadioGroup",
            "data-instance-uid": 'i86_20_' + 0
        }, this.state.radioItems.map(function(item, index) {
            return h("div", {
                className: "label-2",
                key: index
            }, h(React.useComponent, {
                id: item.name,
                value: item.name,
                checked: item.checked,
                text: item.value,
                isRight: true,
                is: "XRadio",
                "data-instance-uid": 'i95_36_' + index
            }));
        }, this))));;
    },
    classUid: "c4511"
}, {});
P = React.registerPage(P, "pages/native/label/index");
export default P;
</script>
<style>
.column-layout {
  display: flex;
  flex-direction: column;
}

.label-1 {
  margin-bottom: 30px;
}
.label-1 div {
  display: flex;
  flex-direction: row;
}

.label-2 {
  display: flex;
  flex-direction: row;
}
.label-2 div {
  display: flex;
  width: auto;
}

.label-1__text, .label-2__text {
}

.label-1__icon {
  position: relative;
  margin-right: 20px;
  width: 36px;
  height: 36px;
  background-color: #fcfff4;
}

.label-1__icon-checked {
  position: absolute;
  top: 6px;
  left: 6px;
  width: 24px;
  height: 24px;
  background-color: #1aad19;
}

.label-2__icon {
  position: relative;
  margin-right: 20px;
  width: 36px;
  height: 36px;
  background-color: #fcfff4;
  border-top-left-radius: 100px;
  border-top-right-radius: 100px;
  border-bottom-right-radius: 100px;
  border-bottom-left-radius: 100px;
}

.label-2__icon-checked {
  position: absolute;
  left: 6px;
  top: 6px;
  width: 24px;
  height: 24px;
  background-color: #1aad19;
  border-top-left-radius: 100px;
  border-top-right-radius: 100px;
  border-bottom-right-radius: 100px;
  border-bottom-left-radius: 100px;
}

.label-4_text {
  text-align: center;
  margin-top: 30px;
}
</style>