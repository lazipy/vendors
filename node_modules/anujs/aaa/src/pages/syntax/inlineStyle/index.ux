<import name="anu-page-wrapper" src="../../../components/PageWrapper/index.ux"></import>
<template>
    <anu-page-wrapper>
        <div class="inline-container">
            <div class="item"><text>1. class 样式</text></div>
            <div class="page_hd"><text>{{state.title}}</text></div>
            <div class="item"><text>2. 传统 inlineStyle 样式</text></div>
            <div style="{{props['style2303'] }}"><text>{{state.title}}</text></div>
            <div class="item"><text>3. props 为参数 inlineStyle 样式</text></div>
            <div style="{{props['style2913'] }}"><text>{{state.title}}</text></div>
            <div class="item"><text>4. 直接是object 为参数 inlineStyle 样式</text></div>
            <div style="{{props['style3301'] }}"><text>{{state.title}}</text></div>
            <div class="item"><text>5. state 为参数 inlineStyle 样式</text></div>
            <div style="{{props['style3752'] }}"><text style="{{props['style4162'] }}">{{state.title}}</text></div>
        </div>
    </anu-page-wrapper>
</template>
<script>
import React from "../../../ReactQuick.js";
const formItemStyle = {
    marginBottom: '10px',
    textAlign: 'center',
    padding: '10px 10px 10px 10px',
    fontWeight: 'bold'
};

function Style() {
    this.state = {
        title: '使用 React 编写小程序',
        methodColor: {
            color: 'blue',
            bac: '#fee',
            radius: '4px'
        }
    };
}

Style = React.toClass(Style, React.Component, {
    render: function() {
        var h = React.createElement;
        return h("div", {
            class: "inline-container"
        }, h("div", {
            class: "item"
        }, "1. class 样式"), h("div", {
            class: "page_hd"
        }, this.state.title), h("div", {
            class: "item"
        }, "2. 传统 inlineStyle 样式"), h("div", {
            style: React.toStyle({
                textAlign: 'center',
                padding: '10px 10px 10px 10px',
                fontWeight: 'bold',
                fontSize: '13px'
            }, this.props, 'style2303')
        }, this.state.title), h("div", {
            class: "item"
        }, "3. props 为参数 inlineStyle 样式"), h("div", {
            style: React.toStyle({
                zIndex: this.props.studyTip === 0 ? 3 : 1
            }, this.props, 'style2913')
        }, this.state.title), h("div", {
            class: "item"
        }, "4. 直接是object 为参数 inlineStyle 样式"), h("div", {
            style: React.toStyle(formItemStyle, this.props, 'style3301')
        }, this.state.title), h("div", {
            class: "item"
        }, "5. state 为参数 inlineStyle 样式"), h("div", {
            style: React.toStyle({
                color: this.state.methodColor.color,
                backgroundColor: this.state.methodColor.bac
            }, this.props, 'style3752')
        }, h("text", {
            style: React.toStyle({
                color: this.state.methodColor.color,
                backgroundColor: this.state.methodColor.bac
            }, this.props, 'style4162')
        }, this.state.title)));;
    },
    classUid: "c2437"
}, {});
Style.config = {
    navigationBarTextStyle: '#fff',
    navigationBarBackgroundColor: '#0088a4',
    navigationBarTitleText: 'Demo',
    backgroundColor: '#eeeeee',
    backgroundTextStyle: 'light'
};
Style.defaultProps = {
    studyTip: 1
};
Style = React.registerPage(Style, "pages/syntax/inlineStyle/index");
export default Style;
</script>
<style>
.inline-container {
  display: flex;
  flex-direction: column;
}
.inline-container .item {
  background-color: #f8f8f8;
  padding: 40px;
  margin-bottom: 20px;
  display: flex;
  flex-direction: column;
  width: 100%;
}
</style>