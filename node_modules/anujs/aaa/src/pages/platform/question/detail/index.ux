<import name="anu-page-wrapper" src="../../../../components/PageWrapper/index.ux"></import>
<template>
    <anu-page-wrapper>
        <div class="detail-page">
            <div class='question-detail'>
                <div class='title'><text>{{state.data.question}}</text></div>
                <div class='city'><text>{{state.data.city}}</text></div>
                <div class='other-infortion'>
                    <div>
                        <image class="image" src="{{state.data.userImage}}"></image><text class='userName text'>{{state.data.userName}}</text><text class='post-date text'>{{state.data.date}}</text>
                    </div>
                    <div class='eye-wrapper'>
                        <image class="image" src='../../../../assets/image/eye.png'></image><text class='eye-num text'>{{state.data.eyeNum}}</text>
                    </div>
                </div>
            </div>
            <div class='question-prompt'><text class="text">{{'共' + state.data.answerNum + '个回答'}}</text>
                <div onclick="dispatchEvent" class='sort-wrapper' data-click-uid="e56_25" data-beacon-uid="default">
                    <image class="image" src='../../../../assets/image/sort.png'></image><text class="text">{{state.sortkey === 'byTime' ? '按时间排序' : '按热度排序'}}</text>
                </div>
            </div>
            <block for="(i2471,item) in state.answer">
                <div class='answer-wrapper'>
                    <div class='user-wrapper'>
                        <image class="image" src="{{item.userImage}}"></image>
                        <div class='name-time'><text class='text-name'>{{item.userName}}</text><text class='text time'>{{item.time}}</text></div>
                    </div>
                    <div class='answer-desc'><text>{{item.desc}}</text></div>
                    <div class='agree-with-wrapper'>
                        <image class="image" src='../../../../assets/image/agree_with.png'></image><text class="text">{{item.agreeWithNum}}</text>
                    </div>
                </div>
            </block>
        </div>
    </anu-page-wrapper>
</template>
<script>
import React from "../../../../ReactQuick.js";

function P() {
    this.state = {
        data: {},
        answer: [],
        sortkey: 'byTime'
    };
}

P = React.toClass(P, React.Component, {
    componentDidMount: function() {
        let that = this;
        React.api.showLoading({
            title: '获取资源中',
            mask: true
        });
        React.api.request({
            url: 'http://yapi.demo.qunar.com/mock/11595/qunar/question/detail',
            success: function(data) {
                React.api.hideLoading();
                that.setState({
                    data: data.data
                });
                that.setState({
                    answer: [...that.state.answer, ...data.data.answer]
                });
            }
        });
    },
    switchSortkey: function() {
        this.setState({
            sortkey: this.state.sortkey === 'byTime' ? 'byHot' : 'byTime'
        });
    },
    render: function() {
        var h = React.createElement;
        return h("div", {
            class: "detail-page"
        }, h("div", {
            class: "question-detail"
        }, h("div", {
            class: "title"
        }, this.state.data.question), h("div", {
            class: "city"
        }, this.state.data.city), h("div", {
            class: "other-infortion"
        }, h("div", null, h("image", {
            class: "image",
            src: this.state.data.userImage
        }), h("text", {
            class: "userName text"
        }, this.state.data.userName), h("text", {
            class: "post-date text"
        }, this.state.data.date)), h("div", {
            class: "eye-wrapper"
        }, h("image", {
            class: "image",
            src: "../../../../assets/image/eye.png"
        }), h("text", {
            class: "eye-num text"
        }, this.state.data.eyeNum)))), h("div", {
            class: "question-prompt"
        }, h("text", {
            class: "text"
        }, '共' + this.state.data.answerNum + '个回答'), h("div", {
            onClick: this.switchSortkey.bind(this),
            class: "sort-wrapper",
            "data-click-uid": "e56_25",
            "data-beacon-uid": "default"
        }, h("image", {
            class: "image",
            src: "../../../../assets/image/sort.png"
        }), h("text", {
            class: "text"
        }, this.state.sortkey === 'byTime' ? '按时间排序' : '按热度排序'))), this.state.answer.map(function(item, i2471) {
            return h("div", {
                class: "answer-wrapper"
            }, h("div", {
                class: "user-wrapper"
            }, h("image", {
                class: "image",
                src: item.userImage
            }), h("div", {
                class: "name-time"
            }, h("text", {
                class: "text-name"
            }, item.userName), h("text", {
                class: "text time"
            }, item.time))), h("div", {
                class: "answer-desc"
            }, item.desc), h("div", {
                class: "agree-with-wrapper"
            }, h("image", {
                class: "image",
                src: "../../../../assets/image/agree_with.png"
            }), h("text", {
                class: "text"
            }, item.agreeWithNum)));
        }, this));;
    },
    classUid: "c3611"
}, {});
P.config = {
    backgroundColor: '#fff',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '问答详情',
    navigationBarTextStyle: 'black'
};
P = React.registerPage(P, "pages/platform/question/detail/index");
export default P;
</script>
<style>
page {
  background-color: #fff;
}

.detail-page {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}
.detail-page .question-detail {
  padding: 20px 0px;
  border-bottom-width: 10px;
  border-style: solid;
  border-bottom-color: #f0f0f0;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  width: 100%;
}
.detail-page .question-detail .title {
  font-size: 30px;
  color: #000;
  margin-left: 30px;
  margin-right: 30px;
}
.detail-page .question-detail .city {
  margin-left: 30px;
  margin-bottom: 20px;
  margin-top: 20px;
  padding: 2px 10px;
  line-height: 30px;
  border-top-left-radius: 18px;
  border-top-right-radius: 18px;
  border-bottom-right-radius: 18px;
  border-bottom-left-radius: 18px;
  border: 2px solid #d3d2d2;
  font-size: 22px;
  color: dimgray;
}
.detail-page .question-detail .other-infortion {
  align-self: stretch;
  margin-left: 30px;
  margin-right: 30px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  font-size: 0;
}
.detail-page .question-detail .other-infortion .image {
  margin-right: 15px;
  width: 40px;
  height: 40px;
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  border-bottom-right-radius: 20px;
  border-bottom-left-radius: 20px;
}
.detail-page .question-detail .other-infortion .userName {
  margin-right: 15px;
  line-height: 40px;
  font-size: 22px;
  color: dimgray;
}
.detail-page .question-detail .other-infortion .post-date {
  line-height: 40px;
  font-size: 22px;
  color: #b4b3b3;
}
.detail-page .question-detail .other-infortion .eye-wrapper {
  font-size: 0;
}
.detail-page .question-detail .other-infortion .eye-wrapper .image {
  margin-right: 10px;
  width: 32px;
  height: 32px;
}
.detail-page .question-detail .other-infortion .eye-wrapper .eye-num {
  line-height: 32px;
  font-size: 22px;
  color: #b4b3b3;
}
.detail-page .question-prompt {
  align-self: stretch;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0 30px;
  padding-top: 10px;
  margin-bottom: 37px;
  font-size: 23px;
  color: #b4b3b3;
}
.detail-page .question-prompt > .text {
}
.detail-page .question-prompt .sort-wrapper {
  color: dimgray;
}
.detail-page .question-prompt .sort-wrapper .image {
  margin-right: 7px;
  width: 32px;
  height: 32px;
}
.detail-page .question-prompt .sort-wrapper .text {
  line-height: 32px;
}
.detail-page .answer-wrapper {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-content: flex-start;
  padding: 20px 30px;
  border-top-width: 2px;
  border-style: solid;
  border-top-color: #f0f0f0;
}
.detail-page .answer-wrapper .user-wrapper {
  margin-bottom: 20px;
}
.detail-page .answer-wrapper .user-wrapper .image {
  margin-right: 20px;
  width: 80px;
  height: 80px;
  border-top-left-radius: 40px;
  border-top-right-radius: 40px;
  border-bottom-right-radius: 40px;
  border-bottom-left-radius: 40px;
}
.detail-page .answer-wrapper .user-wrapper .name-time {
}
.detail-page .answer-wrapper .user-wrapper .name-time .text-name {
  line-height: 50px;
  font-size: 25px;
  color: dimgray;
}
.detail-page .answer-wrapper .user-wrapper .name-time .time {
  line-height: 30px;
  font-size: 22px;
  color: #b4b3b3;
}
.detail-page .answer-wrapper .answer-desc {
  font-size: 25px;
  color: #000;
  margin-bottom: 20px;
}
.detail-page .answer-wrapper .agree-with-wrapper {
  align-self: flex-end;
  padding: 0 12px;
  padding-top: 5px;
  border-top-left-radius: 25px;
  border-top-right-radius: 25px;
  border-bottom-right-radius: 25px;
  border-bottom-left-radius: 25px;
  font-size: 0;
  border: 1px solid #d3d2d2;
}
.detail-page .answer-wrapper .agree-with-wrapper .image {
  margin-right: 7px;
  width: 28px;
  height: 28px;
}
.detail-page .answer-wrapper .agree-with-wrapper .text {
  font-size: 24px;
  color: #b4b3b3;
}
</style>