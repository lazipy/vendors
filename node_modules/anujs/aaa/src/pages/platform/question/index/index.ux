<import name="anu-page-wrapper" src="../../../../components/PageWrapper/index.ux"></import>
<template>
    <anu-page-wrapper>
        <div class="question">
            <div class="nav-wrapper" style="{{props['style3883'] }}">
                <div class=" row"><text onclick="dispatchEvent" class="nav-btn {{state.navBtnActiveIndex === 0 ? 'active' : ''}}" data-click-uid="e73_26" data-beacon-uid="default">我的问答</text><text onclick="dispatchEvent" class="nav-btn {{state.navBtnActiveIndex === 1 ? 'active' : ''}}" data-click-uid="e79_26" data-beacon-uid="default">推荐</text>
                    <div class="nav-btn"><text onclick="dispatchEvent" class="{{state.navBtnActiveIndex === 2 ? 'active' : ''}}" data-click-uid="e85_32" data-beacon-uid="default">{{state.city}}</text>
                        <div onclick="dispatchEvent" class="open-icon-wrapper" data-click-uid="e86_31" data-beacon-uid="default">
                            <block if="{{state.navBtnActiveIndex === 2}}">
                                <image class="open-icon image" src="../../../../assets/image/open_select.png"></image>
                            </block>
                            <block elif="true">
                                <image class="open-icon image" src="../../../../assets/image/open.png"></image>
                            </block>
                        </div>
                    </div>
                </div>
                <div class="switch-bar {{state.navBtnActiveIndex === 1 ? 'second-choose' : state.navBtnActiveIndex === 0 ? 'first-choose' : 'third-choose'}}"></div>
            </div>
            <div class="quest-content" style="{{props['style7409'] }}">
                <block if="{{state.navBtnActiveIndex === 0}}">
                    <div class="my-question-answer">
                        <div class="tool">
                            <div>
                                <block if="{{state.isQuestion}}"><span>{{'共有0个提问'}}</span></block>
                                <block elif="true"><span>{{'共有0个回答'}}</span></block>
                            </div>
                            <div onclick="dispatchEvent" class="switch-wrapper" data-click-uid="e111_35" data-beacon-uid="default">
                                <div>
                                    <block if="{{state.isQuestion}}"><span>{{'切换至回答'}}</span></block>
                                    <block elif="true"><span>{{'切换至提问'}}</span></block>
                                </div>
                            </div>
                        </div>
                        <div class="no-data-prompt">
                            <image class="image" src="../../../../assets/image/order_none.png"></image>
                            <div class="message">
                                <block if="{{state.isQuestion}}"><span>{{'您还没有发布过问题，去提问吧~'}}</span></block>
                                <block elif="true"><span>{{'您还没有发布过回答，去回答吧~'}}</span></block>
                            </div>
                        </div>
                    </div>
                </block>
                <block if="{{state.navBtnActiveIndex === 1 || state.navBtnActiveIndex === 2}}">
                    <div class="all-question" style="{{props['style9747'] }}">
                        <block for="(i4913,item) in state.data">
                            <div onclick="dispatchEvent" class="question-item" data-click-uid="{{'e129_39_' + i4913}}" data-beacon-uid="default" style="{{props['style10199' + i4913] }}">
                                <div class="quest-title">
                                    <block if="{{item.isRemark}}"><text class="remark {{item.remark === '最新' ? 'new' : item.remark === '置顶' ? 'stick' : 'hot'}}">{{item.remark}}</text></block><text class="{{item.isRemark ? 'width' : ''}} title">{{item.title}}</text>
                                </div><text class="desc hide-text">{{item.desc}}</text>
                                <div class="other-message">
                                    <div class="other-message-item">
                                        <image class="eye image" src="../../../../assets/image/eye.png"></image><text class="eye-text text">{{item.seeNum}}</text>
                                    </div>
                                    <div class="other-message-item">
                                        <image class="image" src="../../../../assets/image/message.png"></image><text class="text">{{item.commentNum}}</text>
                                    </div>
                                </div>
                            </div>
                        </block>
                    </div>
                </block>
            </div>
        </div>
    </anu-page-wrapper>
</template>
<script>
import React from "../../../../ReactQuick.js";

function P() {
    this.state = {
        navBtnActiveIndex: 1,
        isQuestion: true,
        data: [],
        city: '北京'
    };
    this.colStyle = {};
    this.colStyle = {
        display: 'flex',
        flexDirection: 'column'
    };
}

P = React.toClass(P, React.Component, {
    navItemClick: function(navBtnActiveIndex) {
        this.setState({
            navBtnActiveIndex
        });

        if (navBtnActiveIndex === 1 || navBtnActiveIndex === 2) {
            this.getData();
        }
    },
    switchFun: function() {
        this.setState({
            isQuestion: !this.state.isQuestion
        });
    },
    getData: function() {
        let that = this;
        React.api.request({
            url: 'http://yapi.demo.qunar.com/mock/11595/qunar/question',
            success: function(data) {
                that.setState({
                    data: data.data
                });
            }
        });
    },
    questionDetail: function() {
        React.api.navigateTo({
            url: '/pages/demo/question/detail/index'
        });
    },
    componentDidMount: function() {
        this.getData();
    },
    onShow: function() {
        let app = React.getApp();

        if (app.globalData.citySelect) {
            this.setState({
                city: app.globalData.citySelect
            });
        }
    },
    toCitySelect: function() {
        this.navItemClick(2);
        React.api.navigateTo({
            url: '/pages/demo/citySelect/index'
        });
    },
    render: function() {
        var h = React.createElement;
        return h("div", {
            class: "question"
        }, h("div", {
            class: "nav-wrapper",
            style: React.toStyle(this.colStyle, this.props, 'style3883')
        }, h("div", {
            class: " row"
        }, h("text", {
            onClick: this.navItemClick.bind(this, 0),
            class: 'nav-btn ' + (this.state.navBtnActiveIndex === 0 ? 'active' : ''),
            "data-click-uid": "e73_26",
            "data-beacon-uid": "default"
        }, "我的问答"), h("text", {
            onClick: this.navItemClick.bind(this, 1),
            class: 'nav-btn ' + (this.state.navBtnActiveIndex === 1 ? 'active' : ''),
            "data-click-uid": "e79_26",
            "data-beacon-uid": "default"
        }, "推荐"), h("div", {
            class: "nav-btn"
        }, h("text", {
            onClick: this.navItemClick.bind(this, 2),
            class: this.state.navBtnActiveIndex === 2 ? 'active' : '',
            "data-click-uid": "e85_32",
            "data-beacon-uid": "default"
        }, this.state.city), h("div", {
            onClick: this.toCitySelect.bind(this),
            class: "open-icon-wrapper",
            "data-click-uid": "e86_31",
            "data-beacon-uid": "default"
        }, this.state.navBtnActiveIndex === 2 ? h("image", {
            class: "open-icon image",
            src: "../../../../assets/image/open_select.png"
        }) : h("image", {
            class: "open-icon image",
            src: "../../../../assets/image/open.png"
        })))), h("div", {
            class: 'switch-bar ' + (this.state.navBtnActiveIndex === 1 ? 'second-choose' : this.state.navBtnActiveIndex === 0 ? 'first-choose' : 'third-choose')
        })), h("div", {
            class: "quest-content",
            style: React.toStyle(this.colStyle, this.props, 'style7409')
        }, this.state.navBtnActiveIndex === 0 && h("div", {
            class: "my-question-answer"
        }, h("div", {
            class: "tool"
        }, h("div", null, this.state.isQuestion ? '共有0个提问' : '共有0个回答'), h("div", {
            onClick: this.switchFun.bind(this),
            class: "switch-wrapper",
            "data-click-uid": "e111_35",
            "data-beacon-uid": "default"
        }, h("div", null, this.state.isQuestion ? '切换至回答' : '切换至提问'))), h("div", {
            class: "no-data-prompt"
        }, h("image", {
            class: "image",
            src: "../../../../assets/image/order_none.png"
        }), h("div", {
            class: "message"
        }, this.state.isQuestion ? '您还没有发布过问题，去提问吧~' : '您还没有发布过回答，去回答吧~'))), (this.state.navBtnActiveIndex === 1 || this.state.navBtnActiveIndex === 2) && h("div", {
            class: "all-question",
            style: React.toStyle(this.colStyle, this.props, 'style9747')
        }, this.state.data.map(function(item, i4913) {
            return h("div", {
                onClick: this.questionDetail.bind(this),
                class: "question-item",
                "data-click-uid": 'e129_39_' + i4913,
                "data-beacon-uid": "default",
                style: React.toStyle(this.colStyle, this.props, 'style10199' + i4913)
            }, h("div", {
                class: "quest-title"
            }, item.isRemark && h("text", {
                class: 'remark ' + (item.remark === '最新' ? 'new' : item.remark === '置顶' ? 'stick' : 'hot')
            }, item.remark), h("text", {
                class: (item.isRemark ? 'width' : '') + " title"
            }, item.title)), h("text", {
                class: "desc hide-text"
            }, item.desc), h("div", {
                class: "other-message"
            }, h("div", {
                class: "other-message-item"
            }, h("image", {
                class: "eye image",
                src: "../../../../assets/image/eye.png"
            }), h("text", {
                class: "eye-text text"
            }, item.seeNum)), h("div", {
                class: "other-message-item"
            }, h("image", {
                class: "image",
                src: "../../../../assets/image/message.png"
            }), h("text", {
                class: "text"
            }, item.commentNum))));
        }, this))));;
    },
    classUid: "c7192"
}, {});
P.config = {
    backgroundColor: 'rgb(240, 240, 240);',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '趣问答',
    navigationBarTextStyle: 'black'
};
P = React.registerPage(P, "pages/platform/question/index/index");
export default P;
</script>
<style>
page {
  height: 100%;
  background-color: #f0f0f0;
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.col {
  display: flex;
  flex-direction: column;
}

.question {
  display: flex;
  flex-direction: column;
  flex: 1;
  height: 100%;
}
.question .nav-wrapper {
  z-index: 999;
  width: 100%;
  padding: 0 30px;
  padding-bottom: 5px;
  background-color: #fff;
}
.question .nav-wrapper .nav-btn {
  margin-right: 50px;
  line-height: 60px;
  font-size: 28px;
  color: #000;
  display: flex;
  align-items: center;
  flex-direction: row;
}
.question .nav-wrapper .nav-btn .open-icon-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  width: 60px;
  height: 40px;
}
.question .nav-wrapper .nav-btn .open-icon {
  margin-left: 10px;
  width: 25px;
  height: 15px;
}
.question .nav-wrapper .active {
  color: #22a0fa;
}
.question .nav-wrapper .switch-bar {
  height: 6px;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
  background-color: #22a0fa;
}
.question .first-choose {
  width: 110px;
  transform: translateX(0px);
}
.question .second-choose {
  width: 80px;
  transform: translateX(155px);
}
.question .third-choose {
  width: 80px;
  transform: translateX(270px);
}
.question .quest-content {
  background-color: #ffffff;
  height: 100%;
}
.question .quest-content .my-question-answer {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  height: 100%;
}
.question .quest-content .my-question-answer .tool {
  padding: 0 30px;
  border-bottom-width: 2px;
  border-bottom-color: #f0f0f0;
  line-height: 60px;
  font-size: 22px;
  color: #c5c3c3;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}
.question .quest-content .my-question-answer .tool .switch-wrapper {
  line-height: 60px;
}
.question .quest-content .my-question-answer .no-data-prompt {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: -100px;
}
.question .quest-content .my-question-answer .no-data-prompt .image {
  margin-bottom: 30px;
  width: 180px;
  height: 101px;
}
.question .quest-content .my-question-answer .no-data-prompt .message {
  font-size: 22px;
  color: #c5c3c3;
}
.question .quest-content .question-item {
  padding: 20px 30px;
  padding-top: 40px;
  border-bottom-width: 2px;
  border-style: solid;
  border-bottom-color: #f0f0f0;
  background-color: #fff;
  font-size: 0;
}
.question .quest-content .question-item .remark {
  padding: 0 12px;
  margin-right: 15px;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
  font-size: 20px;
}
.question .quest-content .question-item .hot {
  background-color: #ffccc7;
  color: #f5222d;
}
.question .quest-content .question-item .stick {
  background-color: #ffe7ba;
  color: #fa8c16;
}
.question .quest-content .question-item .new {
  background-color: #bae7ff;
  color: #1890ff;
}
.question .quest-content .question-item .width {
  width: 600px;
}
.question .quest-content .question-item .title {
  font-size: 30px;
}
.question .quest-content .question-item .desc {
  margin-top: 20px;
  font-size: 22px;
  color: #afaeae;
}
.question .quest-content .question-item .hide-text {
  text-overflow: ellipsis;
}
.question .quest-content .question-item .other-message {
  font-size: 0;
  display: flex;
  justify-content: flex-end;
}
.question .quest-content .question-item .other-message .other-message-item {
  align-items: center;
  margin-right: 20px;
  font-size: 0;
}
.question .quest-content .question-item .other-message .other-message-item .image {
  margin-right: 10px;
  width: 25px;
  height: 25px;
}
.question .quest-content .question-item .other-message .other-message-item .eye-text {
  line-height: 32px;
}
.question .quest-content .question-item .other-message .other-message-item .text {
  line-height: 25px;
  font-size: 20px;
  color: #afaeae;
}
</style>