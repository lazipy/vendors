<import name="anu-xoverlay" src="../XOverlay/index.ux"></import>
<import name="anu-xdatepickeritem" src="../XDatePickerItem/index.ux"></import>
<import name="anu-xpickeritem" src="../XPickerItem/index.ux"></import>
<template>
    <div ontouchmove="dispatchEvent" data-touchmove-uid="e225_11" data-beacon-uid="default">
        <div onclick="dispatchEvent" data-click-uid="e226_13" data-beacon-uid="default">
            <slot></slot>
        </div>
        <anu-xoverlay data-instance-uid="{{'i227_8_' + 0}}"></anu-xoverlay>
        <div id="quist-picker" class="quist-picker  {{state.animationClass}}" show="{{!!state.show}}">
            <div class="quist-picker-title"><text class="quist-picker-cancel" onclick="dispatchEvent" data-click-uid="e230_44" data-beacon-uid="default">{{props.cancelText}}</text><text class="quist-picker-confirm" onclick="dispatchEvent" style="{{props['style13397'] }}" data-click-uid="e236_12" data-beacon-uid="default">{{props.okText}}</text></div>
            <div class="quist-picker-content">
                <block for="(index,group) in state.groups">
                    <div class="anu-picker-item">
                        <block if="{{props.mode === 'date' || props.mode === 'time'}}">
                            <anu-xdatepickeritem data-instance-uid="{{'i246_18_' + index}}"></anu-xdatepickeritem>
                        </block>
                        <block elif="true">
                            <anu-xpickeritem data-instance-uid="{{'i257_18_' + index}}"></anu-xpickeritem>
                        </block>
                    </div>
                </block>
            </div>
        </div>
    </div>
</template>
<script>
import XPicker, {
    React
} from './index.js';
export default React.registerComponent(XPicker, 'XPicker');
</script>
<style>
.pickerenter {
  animation-name: pickerenter;
  animation-duration: 400ms;
  animation-timing-function: ease-in;
}

.pickerleave {
  animation-name: pickerleave;
  animation-duration: 300ms;
  animation-timing-function: ease-in;
}

@keyframes pickerenter {
  0% {
    height: 0;
    transform: translateY(600px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes pickerleave {
  0% {
    transform: translateY(0);
  }
  100% {
    height: 0;
    transform: translateY(600px);
  }
}
.quist-picker {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 600px;
  background-color: #ffffff;
  flex-direction: column;
  z-index: 300;
}

.quist-picker-title {
  width: 100%;
  height: 80px;
  justify-content: space-between;
  display: flex;
  flex-direction: row;
  align-items: center;
  border-bottom-width: 2px;
  border-style: solid;
  border-bottom-color: #eeeeee;
}

.quist-picker-cancel {
  padding: 0 30px;
}

.quist-picker-confirm {
  padding: 0 30px;
}

.quist-picker-ul {
  flex: 1;
  width: 100%;
  justify-content: space-between;
  flex-direction: column;
  align-items: center;
}

.quist-picker-li {
  flex-direction: column;
  height: 100px;
  align-items: center;
  justify-content: center;
}

.anu-picker-item {
  display: flex;
  flex: 1;
  justify-content: center;
}

.quist-picker-content {
  height: 476px;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}
</style>