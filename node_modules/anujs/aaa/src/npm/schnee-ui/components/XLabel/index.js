import React from "../../../../ReactQuick.js";
const supportWidgets = ['XCheckbox', 'XRadio', 'XButton', 'XSwitch'];

function getFibersById(fiber, id) {
    let ret = [];
    fiberRecursive(fiber, fiber => {
        if (fiber.props.id === id && supportWidgets.indexOf(fiber.name) !== -1) {
            ret.push(fiber);
        }
    });
    return ret;
}

function fiberRecursive(fiber, handler) {
    for (fiber = fiber.child; fiber; fiber = fiber.sibling) {
        if (handler(fiber)) {
            return;
        }

        if (fiber.child) {
            fiberRecursive(fiber, handler);
        }
    }
}

function getFirstWidget(fiber) {
    let ret = null;
    fiberRecursive(fiber, fiber => {
        if (supportWidgets.indexOf(fiber.name) !== -1) {
            ret = fiber;
            return true;
        }
    });
    return ret;
}

function getTopFiber(fiber) {
    while (fiber.return) {
        fiber = fiber.return;
    }

    return fiber || null;
}

function XLabel(props) {
    this.handleLabelClick = this.handleLabelClick.bind(this);
}

XLabel = React.toClass(XLabel, React.Component, {
    handleLabelClick: function(e) {
        const fiber = this._reactInternalFiber;
        let targetFiber = null;

        if (this.props.for !== undefined) {
            const topFiber = getTopFiber(fiber);
            const targetFibers = getFibersById(topFiber, this.props.for);
            targetFiber = targetFibers.pop();
        } else {
            targetFiber = getFirstWidget(fiber);
        }

        if (targetFiber) {
            const fn = targetFiber.stateNode.handleClick;
            fn && fn(e);
        }
    },
    componentDidMount: function() {
        const targetFiber = getFirstWidget(this._reactInternalFiber);

        if (targetFiber) {
            targetFiber.props.__InLabel = true;
        }
    },
    render: function() {
        var h = React.createElement;
        return h("div", {
            className: "col",
            onClick: this.handleLabelClick,
            "data-click-uid": "e92_16",
            "data-beacon-uid": "default",
            style: React.toStyle(this.props.style, this.props, 'style4524')
        }, this.props.children);;
    },
    classUid: "c3413"
}, {});
XLabel.defaultProps = {
    style: {}
};
export {
    React
};
export default XLabel;