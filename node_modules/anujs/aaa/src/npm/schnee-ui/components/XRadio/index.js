import React from "../../../../ReactQuick.js";

function collectRadioInstances(p, ret, instance) {
    for (p = p.child; p; p = p.sibling) {
        if (p.name == 'XRadio') {
            if (p.stateNode !== instance) {
                ret.push(p.stateNode);
            }
        } else if (p.child) {
            collectRadioInstances(p, ret, instance);
        }
    }
}

const styleConfig = {
    check_width: 40,
    thumb_width: 30,
    gap: 6
};

function getSizeWidth(type, size) {
    const default_width = styleConfig[type + "_width"];
    const {
        gap
    } = styleConfig;
    let width = default_width;

    switch (size) {
        case 'large':
            width += gap;
            break;

        case 'small':
            width -= gap;
            break;
    }

    return width + "rpx";
}

const BACKGROUND_COLOR = '#ffffff';
const DISABLED_COLOR = '#e1e1e1';
const DISABLED_ENHANCE_COLOR = '#b3b3b3';
const UNCHECKED_COLOR = '#CCCCCC';
const DEFAULT_CHECKED_COLOR = '#1aad16';

function XRadio(props) {
    this.state = {
        checked: props.checked,
        check_width: getSizeWidth('check', props.size),
        thumb_width: getSizeWidth('thumb', props.size),
        checkedValue: ''
    };
    this.handleClick = this.handleClick.bind(this);
    this.onClick = this.onClick.bind(this);
}

XRadio = React.toClass(XRadio, React.Component, {
    switchState: function(checked) {
        if (!this.props.disabled) {
            this.setState({
                checked
            });
        }
    },
    onClick: function(e) {
        this.handleClick(e);
    },
    handleClick: function() {
        if (this.props.disabled) {
            return;
        }

        if (this.state.checked) {
            return;
        }

        var fiber = this._reactInternalFiber;
        var radioInstances = [];
        var parentInstance = null;

        while (fiber.return) {
            fiber = fiber.return;

            if (fiber.name === 'XRadioGroup') {
                parentInstance = fiber.stateNode;
                collectRadioInstances(fiber, radioInstances, this);
                break;
            }
        }

        var checked = this.state.checked;
        this.switchState(!checked);
        radioInstances.forEach(function(instance) {
            instance.switchState(checked);
        });
        parentInstance && parentInstance.emitEvent(this.props.value);
    },
    componentWillReceiveProps: function(nextProps) {
        const updateProps = {};
        let shouldUpdate = false;
        ['checked', 'size'].forEach(key => {
            if (nextProps[key] !== this.props[key]) {
                shouldUpdate = true;

                if (key === 'size') {
                    updateProps['check_width'] = getSizeWidth('check', nextProps.size);
                    updateProps['thumb_width'] = getSizeWidth('thumb', nextProps.size);
                } else {
                    updateProps[key] = nextProps[key];
                }
            }
        });

        if (shouldUpdate) {
            this.setState(updateProps);
        }
    },
    render: function() {
        var h = React.createElement;
        return h("div", {
            className: "anu-radio-container"
        }, !this.props.isRight && h("text", null, this.props.text), h("div", {
            className: "anu-radio",
            onClick: this.onClick,
            "data-click-uid": "e136_20",
            "data-beacon-uid": "default",
            style: React.toStyle({
                backgroundColor: this.props.disabled ? DISABLED_COLOR : BACKGROUND_COLOR,
                borderColor: this.props.disabled ? DISABLED_ENHANCE_COLOR : this.state.checked ? this.props.color : UNCHECKED_COLOR,
                borderRadius: this.state.check_width,
                width: this.state.check_width,
                height: this.state.check_width,
                marginLeft: this.props.isRight ? '0rpx' : '10rpx',
                marginRight: this.props.isRight ? '10rpx' : '0rpx'
            }, this.props, 'style8248')
        }, this.state.checked && h("text", {
            className: "anu-radio__check",
            style: React.toStyle({
                backgroundColor: this.props.disabled ? DISABLED_ENHANCE_COLOR : this.props.color,
                width: this.state.thumb_width,
                height: this.state.thumb_width,
                borderRadius: this.state.thumb_width
            }, this.props, 'style9885')
        })), this.props.isRight && h("text", null, this.props.text));;
    },
    classUid: "c6488"
}, {});
XRadio.defaultProps = {
    size: 'default',
    color: DEFAULT_CHECKED_COLOR,
    disabled: false,
    checked: false,
    value: '',
    text: '',
    isRight: true,
    __InLabel: false
};
export {
    React
};
export default XRadio;