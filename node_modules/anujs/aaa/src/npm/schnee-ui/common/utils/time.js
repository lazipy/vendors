function throwIfInvalidDate(date) {
  if (Object.prototype.toString.call(date, null) !== '[object Date]') {
    return false;
  }

  return true;
}

export function convertDate(date, format) {
  let str = format;
  const o = {
    'M+': date.getMonth() + 1,
    'D+': date.getDate(),
    'h+': date.getHours(),
    'm+': date.getMinutes(),
    's+': date.getSeconds()
  };

  if (/(Y+)/.test(format)) {
    str = str.replace(RegExp.$1, date.getFullYear().toString().substr(4 - RegExp.$1.length));
  }

  for (const k in o) {
    if (new RegExp("(" + k + ")").test(format)) {
      str = str.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ("00" + o[k]).substr(o[k].toString().length));
    }
  }

  return str;
}
export function nextYear(now, index = 0) {
  if (throwIfInvalidDate(now)) {
    const date = new Date(now.getTime());
    date.setFullYear(date.getFullYear() + index);
    return date;
  } else {
    return parseInt(now) + index;
  }
}
export function nextMonth(now, index = 0) {
  throwIfInvalidDate(now);
  const month = now.getMonth() + index;
  const date = new Date(now.getTime());
  date.setDate(1);
  date.setMonth(month);
  return date;
}
export function nextDate(now, index = 0) {
  throwIfInvalidDate(now);
  const date = new Date(now.getTime() + index * 24 * 60 * 60 * 1000);
  return date;
}
export function nextHour(now, index = 0) {
  throwIfInvalidDate(now);
  const date = new Date(now.getTime() + index * 60 * 60 * 1000);
  return date;
}
export function nextMinute(now, index = 0) {
  throwIfInvalidDate(now);
  const date = new Date(now.getTime() + index * 60 * 1000);
  return date;
}
export function nextSecond(now, index = 0) {
  throwIfInvalidDate(now);
  const date = new Date(now.getTime() + index * 1000);
  return date;
}

const convert2Decimal = num => num > 9 ? num : "0" + num;

export function getDate(date) {
  throwIfInvalidDate(date);
  return date.getFullYear() + "-" + convert2Decimal(date.getMonth() + 1) + "-" + convert2Decimal(date.getDate());
}
export function getTime(time) {
  throwIfInvalidDate(time);
  return convert2Decimal(time.getHours()) + ": " + convert2Decimal(time.getMinutes());
}
export const timeStrToDate = (str = '', type) => {
  if (typeof str === 'string') {
    const d = new Date();

    if (type === 'time') {
      const arr = str.split(':');
      d.setHours(arr[0], arr[1], '00');
    } else if (type === 'date') {
      const arr = str.split('-');
      d.setFullYear(arr[0], arr[1] - 1, arr[2]);
    }

    return d;
  } else {
    return str;
  }
};